# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.8
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.





from sys import version_info
if version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_oneseg_swig', [dirname(__file__)])
        except ImportError:
            import _oneseg_swig
            return _oneseg_swig
        if fp is not None:
            try:
                _mod = imp.load_module('_oneseg_swig', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _oneseg_swig = swig_import_helper()
    del swig_import_helper
else:
    import _oneseg_swig
del version_info
try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.


def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        object.__setattr__(self, name, value)
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr_nondynamic(self, class_type, name, static=1):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    if (not static):
        return object.__getattr__(self, name)
    else:
        raise AttributeError(name)

def _swig_getattr(self, class_type, name):
    return _swig_getattr_nondynamic(self, class_type, name, 0)


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object:
        pass
    _newclass = 0



def _swig_setattr_nondynamic_method(set):
    def set_attr(self, name, value):
        if (name == "thisown"):
            return self.this.own(value)
        if hasattr(self, name) or (name == "this"):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add attributes to %s" % self)
    return set_attr



def high_res_timer_now():
    """high_res_timer_now() -> gr::high_res_timer_type"""
    return _oneseg_swig.high_res_timer_now()

def high_res_timer_now_perfmon():
    """high_res_timer_now_perfmon() -> gr::high_res_timer_type"""
    return _oneseg_swig.high_res_timer_now_perfmon()

def high_res_timer_tps():
    """high_res_timer_tps() -> gr::high_res_timer_type"""
    return _oneseg_swig.high_res_timer_tps()

def high_res_timer_epoch():
    """high_res_timer_epoch() -> gr::high_res_timer_type"""
    return _oneseg_swig.high_res_timer_epoch()
class ofdm_synchronization_1seg(object):
    """<+description of block+>"""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(mode, cp_length):
        """
        make(int mode, float cp_length) -> ofdm_synchronization_1seg_sptr

        Return a shared_ptr to a new instance of oneseg::ofdm_synchronization_1seg.

        To avoid accidental use of raw pointers, oneseg::ofdm_synchronization_1seg's constructor is in a private implementation class. oneseg::ofdm_synchronization_1seg::make is the public interface for creating new instances.

        Params: (mode, cp_length)
        """
        return _oneseg_swig.ofdm_synchronization_1seg_make(mode, cp_length)

    make = staticmethod(make)
    __swig_destroy__ = _oneseg_swig.delete_ofdm_synchronization_1seg
    __del__ = lambda self: None
ofdm_synchronization_1seg_swigregister = _oneseg_swig.ofdm_synchronization_1seg_swigregister
ofdm_synchronization_1seg_swigregister(ofdm_synchronization_1seg)

def ofdm_synchronization_1seg_make(mode, cp_length):
    """
    ofdm_synchronization_1seg_make(int mode, float cp_length) -> ofdm_synchronization_1seg_sptr

    Return a shared_ptr to a new instance of oneseg::ofdm_synchronization_1seg.

    To avoid accidental use of raw pointers, oneseg::ofdm_synchronization_1seg's constructor is in a private implementation class. oneseg::ofdm_synchronization_1seg::make is the public interface for creating new instances.

    Params: (mode, cp_length)
    """
    return _oneseg_swig.ofdm_synchronization_1seg_make(mode, cp_length)

class ofdm_synchronization_1seg_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::oneseg::ofdm_synchronization_1seg)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::oneseg::ofdm_synchronization_1seg)> self) -> ofdm_synchronization_1seg_sptr
        __init__(boost::shared_ptr<(gr::oneseg::ofdm_synchronization_1seg)> self, ofdm_synchronization_1seg p) -> ofdm_synchronization_1seg_sptr
        """
        this = _oneseg_swig.new_ofdm_synchronization_1seg_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(ofdm_synchronization_1seg_sptr self) -> ofdm_synchronization_1seg"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr___deref__(self)

    __swig_destroy__ = _oneseg_swig.delete_ofdm_synchronization_1seg_sptr
    __del__ = lambda self: None

    def make(self, mode, cp_length):
        """
        make(ofdm_synchronization_1seg_sptr self, int mode, float cp_length) -> ofdm_synchronization_1seg_sptr

        Return a shared_ptr to a new instance of oneseg::ofdm_synchronization_1seg.

        To avoid accidental use of raw pointers, oneseg::ofdm_synchronization_1seg's constructor is in a private implementation class. oneseg::ofdm_synchronization_1seg::make is the public interface for creating new instances.

        Params: (mode, cp_length)
        """
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_make(self, mode, cp_length)


    def history(self):
        """history(ofdm_synchronization_1seg_sptr self) -> unsigned int"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(ofdm_synchronization_1seg_sptr self, int which, int delay)
        declare_sample_delay(ofdm_synchronization_1seg_sptr self, unsigned int delay)
        """
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(ofdm_synchronization_1seg_sptr self, int which) -> unsigned int"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(ofdm_synchronization_1seg_sptr self) -> int"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(ofdm_synchronization_1seg_sptr self) -> double"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_relative_rate(self)


    def start(self):
        """start(ofdm_synchronization_1seg_sptr self) -> bool"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_start(self)


    def stop(self):
        """stop(ofdm_synchronization_1seg_sptr self) -> bool"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(ofdm_synchronization_1seg_sptr self, unsigned int which_input) -> uint64_t"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(ofdm_synchronization_1seg_sptr self, unsigned int which_output) -> uint64_t"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(ofdm_synchronization_1seg_sptr self) -> int"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(ofdm_synchronization_1seg_sptr self, int m)"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(ofdm_synchronization_1seg_sptr self)"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(ofdm_synchronization_1seg_sptr self) -> bool"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(ofdm_synchronization_1seg_sptr self, int m)"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(ofdm_synchronization_1seg_sptr self) -> int"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(ofdm_synchronization_1seg_sptr self, int i) -> long"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(ofdm_synchronization_1seg_sptr self, long max_output_buffer)
        set_max_output_buffer(ofdm_synchronization_1seg_sptr self, int port, long max_output_buffer)
        """
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(ofdm_synchronization_1seg_sptr self, int i) -> long"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(ofdm_synchronization_1seg_sptr self, long min_output_buffer)
        set_min_output_buffer(ofdm_synchronization_1seg_sptr self, int port, long min_output_buffer)
        """
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(ofdm_synchronization_1seg_sptr self) -> float"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(ofdm_synchronization_1seg_sptr self) -> float"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(ofdm_synchronization_1seg_sptr self) -> float"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(ofdm_synchronization_1seg_sptr self) -> float"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(ofdm_synchronization_1seg_sptr self) -> float"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(ofdm_synchronization_1seg_sptr self) -> float"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(ofdm_synchronization_1seg_sptr self, int which) -> float
        pc_input_buffers_full(ofdm_synchronization_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(ofdm_synchronization_1seg_sptr self, int which) -> float
        pc_input_buffers_full_avg(ofdm_synchronization_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(ofdm_synchronization_1seg_sptr self, int which) -> float
        pc_input_buffers_full_var(ofdm_synchronization_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(ofdm_synchronization_1seg_sptr self, int which) -> float
        pc_output_buffers_full(ofdm_synchronization_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(ofdm_synchronization_1seg_sptr self, int which) -> float
        pc_output_buffers_full_avg(ofdm_synchronization_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(ofdm_synchronization_1seg_sptr self, int which) -> float
        pc_output_buffers_full_var(ofdm_synchronization_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(ofdm_synchronization_1seg_sptr self) -> float"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(ofdm_synchronization_1seg_sptr self) -> float"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(ofdm_synchronization_1seg_sptr self) -> float"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(ofdm_synchronization_1seg_sptr self) -> float"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(ofdm_synchronization_1seg_sptr self) -> float"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(ofdm_synchronization_1seg_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(ofdm_synchronization_1seg_sptr self)"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(ofdm_synchronization_1seg_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(ofdm_synchronization_1seg_sptr self) -> int"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(ofdm_synchronization_1seg_sptr self) -> int"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(ofdm_synchronization_1seg_sptr self, int priority) -> int"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(ofdm_synchronization_1seg_sptr self) -> std::string"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_name(self)


    def symbol_name(self):
        """symbol_name(ofdm_synchronization_1seg_sptr self) -> std::string"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(ofdm_synchronization_1seg_sptr self) -> io_signature_sptr"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(ofdm_synchronization_1seg_sptr self) -> io_signature_sptr"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(ofdm_synchronization_1seg_sptr self) -> long"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(ofdm_synchronization_1seg_sptr self) -> basic_block_sptr"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(ofdm_synchronization_1seg_sptr self, int ninputs, int noutputs) -> bool"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(ofdm_synchronization_1seg_sptr self) -> std::string"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(ofdm_synchronization_1seg_sptr self, std::string name)"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(ofdm_synchronization_1seg_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(ofdm_synchronization_1seg_sptr self) -> swig_int_ptr"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(ofdm_synchronization_1seg_sptr self) -> swig_int_ptr"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(ofdm_synchronization_1seg_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _oneseg_swig.ofdm_synchronization_1seg_sptr_message_subscribers(self, which_port)

ofdm_synchronization_1seg_sptr_swigregister = _oneseg_swig.ofdm_synchronization_1seg_sptr_swigregister
ofdm_synchronization_1seg_sptr_swigregister(ofdm_synchronization_1seg_sptr)


ofdm_synchronization_1seg_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
ofdm_synchronization_1seg = ofdm_synchronization_1seg.make;

class tmcc_decoder_1seg(object):
    """Proxy of C++ gr::oneseg::tmcc_decoder_1seg class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(mode, print_params):
        """make(int mode, bool print_params) -> tmcc_decoder_1seg_sptr"""
        return _oneseg_swig.tmcc_decoder_1seg_make(mode, print_params)

    make = staticmethod(make)
    __swig_destroy__ = _oneseg_swig.delete_tmcc_decoder_1seg
    __del__ = lambda self: None
tmcc_decoder_1seg_swigregister = _oneseg_swig.tmcc_decoder_1seg_swigregister
tmcc_decoder_1seg_swigregister(tmcc_decoder_1seg)

def tmcc_decoder_1seg_make(mode, print_params):
    """tmcc_decoder_1seg_make(int mode, bool print_params) -> tmcc_decoder_1seg_sptr"""
    return _oneseg_swig.tmcc_decoder_1seg_make(mode, print_params)

class tmcc_decoder_1seg_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::oneseg::tmcc_decoder_1seg)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::oneseg::tmcc_decoder_1seg)> self) -> tmcc_decoder_1seg_sptr
        __init__(boost::shared_ptr<(gr::oneseg::tmcc_decoder_1seg)> self, tmcc_decoder_1seg p) -> tmcc_decoder_1seg_sptr
        """
        this = _oneseg_swig.new_tmcc_decoder_1seg_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(tmcc_decoder_1seg_sptr self) -> tmcc_decoder_1seg"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr___deref__(self)

    __swig_destroy__ = _oneseg_swig.delete_tmcc_decoder_1seg_sptr
    __del__ = lambda self: None

    def make(self, mode, print_params):
        """make(tmcc_decoder_1seg_sptr self, int mode, bool print_params) -> tmcc_decoder_1seg_sptr"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_make(self, mode, print_params)


    def history(self):
        """history(tmcc_decoder_1seg_sptr self) -> unsigned int"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(tmcc_decoder_1seg_sptr self, int which, int delay)
        declare_sample_delay(tmcc_decoder_1seg_sptr self, unsigned int delay)
        """
        return _oneseg_swig.tmcc_decoder_1seg_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(tmcc_decoder_1seg_sptr self, int which) -> unsigned int"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(tmcc_decoder_1seg_sptr self) -> int"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(tmcc_decoder_1seg_sptr self) -> double"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_relative_rate(self)


    def start(self):
        """start(tmcc_decoder_1seg_sptr self) -> bool"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_start(self)


    def stop(self):
        """stop(tmcc_decoder_1seg_sptr self) -> bool"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(tmcc_decoder_1seg_sptr self, unsigned int which_input) -> uint64_t"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(tmcc_decoder_1seg_sptr self, unsigned int which_output) -> uint64_t"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(tmcc_decoder_1seg_sptr self) -> int"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(tmcc_decoder_1seg_sptr self, int m)"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(tmcc_decoder_1seg_sptr self)"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(tmcc_decoder_1seg_sptr self) -> bool"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(tmcc_decoder_1seg_sptr self, int m)"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(tmcc_decoder_1seg_sptr self) -> int"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(tmcc_decoder_1seg_sptr self, int i) -> long"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(tmcc_decoder_1seg_sptr self, long max_output_buffer)
        set_max_output_buffer(tmcc_decoder_1seg_sptr self, int port, long max_output_buffer)
        """
        return _oneseg_swig.tmcc_decoder_1seg_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(tmcc_decoder_1seg_sptr self, int i) -> long"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(tmcc_decoder_1seg_sptr self, long min_output_buffer)
        set_min_output_buffer(tmcc_decoder_1seg_sptr self, int port, long min_output_buffer)
        """
        return _oneseg_swig.tmcc_decoder_1seg_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(tmcc_decoder_1seg_sptr self) -> float"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(tmcc_decoder_1seg_sptr self) -> float"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(tmcc_decoder_1seg_sptr self) -> float"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(tmcc_decoder_1seg_sptr self) -> float"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(tmcc_decoder_1seg_sptr self) -> float"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(tmcc_decoder_1seg_sptr self) -> float"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(tmcc_decoder_1seg_sptr self, int which) -> float
        pc_input_buffers_full(tmcc_decoder_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.tmcc_decoder_1seg_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(tmcc_decoder_1seg_sptr self, int which) -> float
        pc_input_buffers_full_avg(tmcc_decoder_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.tmcc_decoder_1seg_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(tmcc_decoder_1seg_sptr self, int which) -> float
        pc_input_buffers_full_var(tmcc_decoder_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.tmcc_decoder_1seg_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(tmcc_decoder_1seg_sptr self, int which) -> float
        pc_output_buffers_full(tmcc_decoder_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.tmcc_decoder_1seg_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(tmcc_decoder_1seg_sptr self, int which) -> float
        pc_output_buffers_full_avg(tmcc_decoder_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.tmcc_decoder_1seg_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(tmcc_decoder_1seg_sptr self, int which) -> float
        pc_output_buffers_full_var(tmcc_decoder_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.tmcc_decoder_1seg_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(tmcc_decoder_1seg_sptr self) -> float"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(tmcc_decoder_1seg_sptr self) -> float"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(tmcc_decoder_1seg_sptr self) -> float"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(tmcc_decoder_1seg_sptr self) -> float"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(tmcc_decoder_1seg_sptr self) -> float"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(tmcc_decoder_1seg_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(tmcc_decoder_1seg_sptr self)"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(tmcc_decoder_1seg_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(tmcc_decoder_1seg_sptr self) -> int"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(tmcc_decoder_1seg_sptr self) -> int"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(tmcc_decoder_1seg_sptr self, int priority) -> int"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(tmcc_decoder_1seg_sptr self) -> std::string"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_name(self)


    def symbol_name(self):
        """symbol_name(tmcc_decoder_1seg_sptr self) -> std::string"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(tmcc_decoder_1seg_sptr self) -> io_signature_sptr"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(tmcc_decoder_1seg_sptr self) -> io_signature_sptr"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(tmcc_decoder_1seg_sptr self) -> long"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(tmcc_decoder_1seg_sptr self) -> basic_block_sptr"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(tmcc_decoder_1seg_sptr self, int ninputs, int noutputs) -> bool"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(tmcc_decoder_1seg_sptr self) -> std::string"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(tmcc_decoder_1seg_sptr self, std::string name)"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(tmcc_decoder_1seg_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(tmcc_decoder_1seg_sptr self) -> swig_int_ptr"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(tmcc_decoder_1seg_sptr self) -> swig_int_ptr"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(tmcc_decoder_1seg_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _oneseg_swig.tmcc_decoder_1seg_sptr_message_subscribers(self, which_port)

tmcc_decoder_1seg_sptr_swigregister = _oneseg_swig.tmcc_decoder_1seg_sptr_swigregister
tmcc_decoder_1seg_sptr_swigregister(tmcc_decoder_1seg_sptr)


tmcc_decoder_1seg_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
tmcc_decoder_1seg = tmcc_decoder_1seg.make;

class frequency_deinterleaver_1seg(object):
    """Proxy of C++ gr::oneseg::frequency_deinterleaver_1seg class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(mode):
        """make(int mode) -> frequency_deinterleaver_1seg_sptr"""
        return _oneseg_swig.frequency_deinterleaver_1seg_make(mode)

    make = staticmethod(make)
    __swig_destroy__ = _oneseg_swig.delete_frequency_deinterleaver_1seg
    __del__ = lambda self: None
frequency_deinterleaver_1seg_swigregister = _oneseg_swig.frequency_deinterleaver_1seg_swigregister
frequency_deinterleaver_1seg_swigregister(frequency_deinterleaver_1seg)

def frequency_deinterleaver_1seg_make(mode):
    """frequency_deinterleaver_1seg_make(int mode) -> frequency_deinterleaver_1seg_sptr"""
    return _oneseg_swig.frequency_deinterleaver_1seg_make(mode)

class frequency_deinterleaver_1seg_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::oneseg::frequency_deinterleaver_1seg)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::oneseg::frequency_deinterleaver_1seg)> self) -> frequency_deinterleaver_1seg_sptr
        __init__(boost::shared_ptr<(gr::oneseg::frequency_deinterleaver_1seg)> self, frequency_deinterleaver_1seg p) -> frequency_deinterleaver_1seg_sptr
        """
        this = _oneseg_swig.new_frequency_deinterleaver_1seg_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(frequency_deinterleaver_1seg_sptr self) -> frequency_deinterleaver_1seg"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr___deref__(self)

    __swig_destroy__ = _oneseg_swig.delete_frequency_deinterleaver_1seg_sptr
    __del__ = lambda self: None

    def make(self, mode):
        """make(frequency_deinterleaver_1seg_sptr self, int mode) -> frequency_deinterleaver_1seg_sptr"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_make(self, mode)


    def history(self):
        """history(frequency_deinterleaver_1seg_sptr self) -> unsigned int"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(frequency_deinterleaver_1seg_sptr self, int which, int delay)
        declare_sample_delay(frequency_deinterleaver_1seg_sptr self, unsigned int delay)
        """
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(frequency_deinterleaver_1seg_sptr self, int which) -> unsigned int"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(frequency_deinterleaver_1seg_sptr self) -> int"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(frequency_deinterleaver_1seg_sptr self) -> double"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_relative_rate(self)


    def start(self):
        """start(frequency_deinterleaver_1seg_sptr self) -> bool"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_start(self)


    def stop(self):
        """stop(frequency_deinterleaver_1seg_sptr self) -> bool"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(frequency_deinterleaver_1seg_sptr self, unsigned int which_input) -> uint64_t"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(frequency_deinterleaver_1seg_sptr self, unsigned int which_output) -> uint64_t"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(frequency_deinterleaver_1seg_sptr self) -> int"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(frequency_deinterleaver_1seg_sptr self, int m)"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(frequency_deinterleaver_1seg_sptr self)"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(frequency_deinterleaver_1seg_sptr self) -> bool"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(frequency_deinterleaver_1seg_sptr self, int m)"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(frequency_deinterleaver_1seg_sptr self) -> int"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(frequency_deinterleaver_1seg_sptr self, int i) -> long"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(frequency_deinterleaver_1seg_sptr self, long max_output_buffer)
        set_max_output_buffer(frequency_deinterleaver_1seg_sptr self, int port, long max_output_buffer)
        """
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(frequency_deinterleaver_1seg_sptr self, int i) -> long"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(frequency_deinterleaver_1seg_sptr self, long min_output_buffer)
        set_min_output_buffer(frequency_deinterleaver_1seg_sptr self, int port, long min_output_buffer)
        """
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(frequency_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(frequency_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(frequency_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(frequency_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(frequency_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(frequency_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(frequency_deinterleaver_1seg_sptr self, int which) -> float
        pc_input_buffers_full(frequency_deinterleaver_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(frequency_deinterleaver_1seg_sptr self, int which) -> float
        pc_input_buffers_full_avg(frequency_deinterleaver_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(frequency_deinterleaver_1seg_sptr self, int which) -> float
        pc_input_buffers_full_var(frequency_deinterleaver_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(frequency_deinterleaver_1seg_sptr self, int which) -> float
        pc_output_buffers_full(frequency_deinterleaver_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(frequency_deinterleaver_1seg_sptr self, int which) -> float
        pc_output_buffers_full_avg(frequency_deinterleaver_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(frequency_deinterleaver_1seg_sptr self, int which) -> float
        pc_output_buffers_full_var(frequency_deinterleaver_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(frequency_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(frequency_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(frequency_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(frequency_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(frequency_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(frequency_deinterleaver_1seg_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(frequency_deinterleaver_1seg_sptr self)"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(frequency_deinterleaver_1seg_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(frequency_deinterleaver_1seg_sptr self) -> int"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(frequency_deinterleaver_1seg_sptr self) -> int"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(frequency_deinterleaver_1seg_sptr self, int priority) -> int"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(frequency_deinterleaver_1seg_sptr self) -> std::string"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_name(self)


    def symbol_name(self):
        """symbol_name(frequency_deinterleaver_1seg_sptr self) -> std::string"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(frequency_deinterleaver_1seg_sptr self) -> io_signature_sptr"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(frequency_deinterleaver_1seg_sptr self) -> io_signature_sptr"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(frequency_deinterleaver_1seg_sptr self) -> long"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(frequency_deinterleaver_1seg_sptr self) -> basic_block_sptr"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(frequency_deinterleaver_1seg_sptr self, int ninputs, int noutputs) -> bool"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(frequency_deinterleaver_1seg_sptr self) -> std::string"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(frequency_deinterleaver_1seg_sptr self, std::string name)"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(frequency_deinterleaver_1seg_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(frequency_deinterleaver_1seg_sptr self) -> swig_int_ptr"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(frequency_deinterleaver_1seg_sptr self) -> swig_int_ptr"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(frequency_deinterleaver_1seg_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _oneseg_swig.frequency_deinterleaver_1seg_sptr_message_subscribers(self, which_port)

frequency_deinterleaver_1seg_sptr_swigregister = _oneseg_swig.frequency_deinterleaver_1seg_sptr_swigregister
frequency_deinterleaver_1seg_sptr_swigregister(frequency_deinterleaver_1seg_sptr)


frequency_deinterleaver_1seg_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
frequency_deinterleaver_1seg = frequency_deinterleaver_1seg.make;

class time_deinterleaver_1seg(object):
    """Proxy of C++ gr::oneseg::time_deinterleaver_1seg class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(mode, length):
        """make(int mode, int length) -> time_deinterleaver_1seg_sptr"""
        return _oneseg_swig.time_deinterleaver_1seg_make(mode, length)

    make = staticmethod(make)
    __swig_destroy__ = _oneseg_swig.delete_time_deinterleaver_1seg
    __del__ = lambda self: None
time_deinterleaver_1seg_swigregister = _oneseg_swig.time_deinterleaver_1seg_swigregister
time_deinterleaver_1seg_swigregister(time_deinterleaver_1seg)

def time_deinterleaver_1seg_make(mode, length):
    """time_deinterleaver_1seg_make(int mode, int length) -> time_deinterleaver_1seg_sptr"""
    return _oneseg_swig.time_deinterleaver_1seg_make(mode, length)

class time_deinterleaver_1seg_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::oneseg::time_deinterleaver_1seg)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::oneseg::time_deinterleaver_1seg)> self) -> time_deinterleaver_1seg_sptr
        __init__(boost::shared_ptr<(gr::oneseg::time_deinterleaver_1seg)> self, time_deinterleaver_1seg p) -> time_deinterleaver_1seg_sptr
        """
        this = _oneseg_swig.new_time_deinterleaver_1seg_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(time_deinterleaver_1seg_sptr self) -> time_deinterleaver_1seg"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr___deref__(self)

    __swig_destroy__ = _oneseg_swig.delete_time_deinterleaver_1seg_sptr
    __del__ = lambda self: None

    def make(self, mode, length):
        """make(time_deinterleaver_1seg_sptr self, int mode, int length) -> time_deinterleaver_1seg_sptr"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_make(self, mode, length)


    def history(self):
        """history(time_deinterleaver_1seg_sptr self) -> unsigned int"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(time_deinterleaver_1seg_sptr self, int which, int delay)
        declare_sample_delay(time_deinterleaver_1seg_sptr self, unsigned int delay)
        """
        return _oneseg_swig.time_deinterleaver_1seg_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(time_deinterleaver_1seg_sptr self, int which) -> unsigned int"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(time_deinterleaver_1seg_sptr self) -> int"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(time_deinterleaver_1seg_sptr self) -> double"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_relative_rate(self)


    def start(self):
        """start(time_deinterleaver_1seg_sptr self) -> bool"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_start(self)


    def stop(self):
        """stop(time_deinterleaver_1seg_sptr self) -> bool"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(time_deinterleaver_1seg_sptr self, unsigned int which_input) -> uint64_t"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(time_deinterleaver_1seg_sptr self, unsigned int which_output) -> uint64_t"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(time_deinterleaver_1seg_sptr self) -> int"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(time_deinterleaver_1seg_sptr self, int m)"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(time_deinterleaver_1seg_sptr self)"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(time_deinterleaver_1seg_sptr self) -> bool"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(time_deinterleaver_1seg_sptr self, int m)"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(time_deinterleaver_1seg_sptr self) -> int"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(time_deinterleaver_1seg_sptr self, int i) -> long"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(time_deinterleaver_1seg_sptr self, long max_output_buffer)
        set_max_output_buffer(time_deinterleaver_1seg_sptr self, int port, long max_output_buffer)
        """
        return _oneseg_swig.time_deinterleaver_1seg_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(time_deinterleaver_1seg_sptr self, int i) -> long"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(time_deinterleaver_1seg_sptr self, long min_output_buffer)
        set_min_output_buffer(time_deinterleaver_1seg_sptr self, int port, long min_output_buffer)
        """
        return _oneseg_swig.time_deinterleaver_1seg_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(time_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(time_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(time_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(time_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(time_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(time_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(time_deinterleaver_1seg_sptr self, int which) -> float
        pc_input_buffers_full(time_deinterleaver_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.time_deinterleaver_1seg_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(time_deinterleaver_1seg_sptr self, int which) -> float
        pc_input_buffers_full_avg(time_deinterleaver_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.time_deinterleaver_1seg_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(time_deinterleaver_1seg_sptr self, int which) -> float
        pc_input_buffers_full_var(time_deinterleaver_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.time_deinterleaver_1seg_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(time_deinterleaver_1seg_sptr self, int which) -> float
        pc_output_buffers_full(time_deinterleaver_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.time_deinterleaver_1seg_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(time_deinterleaver_1seg_sptr self, int which) -> float
        pc_output_buffers_full_avg(time_deinterleaver_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.time_deinterleaver_1seg_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(time_deinterleaver_1seg_sptr self, int which) -> float
        pc_output_buffers_full_var(time_deinterleaver_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.time_deinterleaver_1seg_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(time_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(time_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(time_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(time_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(time_deinterleaver_1seg_sptr self) -> float"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(time_deinterleaver_1seg_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(time_deinterleaver_1seg_sptr self)"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(time_deinterleaver_1seg_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(time_deinterleaver_1seg_sptr self) -> int"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(time_deinterleaver_1seg_sptr self) -> int"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(time_deinterleaver_1seg_sptr self, int priority) -> int"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(time_deinterleaver_1seg_sptr self) -> std::string"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_name(self)


    def symbol_name(self):
        """symbol_name(time_deinterleaver_1seg_sptr self) -> std::string"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(time_deinterleaver_1seg_sptr self) -> io_signature_sptr"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(time_deinterleaver_1seg_sptr self) -> io_signature_sptr"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(time_deinterleaver_1seg_sptr self) -> long"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(time_deinterleaver_1seg_sptr self) -> basic_block_sptr"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(time_deinterleaver_1seg_sptr self, int ninputs, int noutputs) -> bool"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(time_deinterleaver_1seg_sptr self) -> std::string"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(time_deinterleaver_1seg_sptr self, std::string name)"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(time_deinterleaver_1seg_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(time_deinterleaver_1seg_sptr self) -> swig_int_ptr"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(time_deinterleaver_1seg_sptr self) -> swig_int_ptr"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(time_deinterleaver_1seg_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _oneseg_swig.time_deinterleaver_1seg_sptr_message_subscribers(self, which_port)

time_deinterleaver_1seg_sptr_swigregister = _oneseg_swig.time_deinterleaver_1seg_sptr_swigregister
time_deinterleaver_1seg_sptr_swigregister(time_deinterleaver_1seg_sptr)


time_deinterleaver_1seg_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
time_deinterleaver_1seg = time_deinterleaver_1seg.make;

class symbol_demapper_1seg(object):
    """Proxy of C++ gr::oneseg::symbol_demapper_1seg class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(mode, constellation_size):
        """make(int mode, int constellation_size) -> symbol_demapper_1seg_sptr"""
        return _oneseg_swig.symbol_demapper_1seg_make(mode, constellation_size)

    make = staticmethod(make)
    __swig_destroy__ = _oneseg_swig.delete_symbol_demapper_1seg
    __del__ = lambda self: None
symbol_demapper_1seg_swigregister = _oneseg_swig.symbol_demapper_1seg_swigregister
symbol_demapper_1seg_swigregister(symbol_demapper_1seg)

def symbol_demapper_1seg_make(mode, constellation_size):
    """symbol_demapper_1seg_make(int mode, int constellation_size) -> symbol_demapper_1seg_sptr"""
    return _oneseg_swig.symbol_demapper_1seg_make(mode, constellation_size)

class symbol_demapper_1seg_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::oneseg::symbol_demapper_1seg)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::oneseg::symbol_demapper_1seg)> self) -> symbol_demapper_1seg_sptr
        __init__(boost::shared_ptr<(gr::oneseg::symbol_demapper_1seg)> self, symbol_demapper_1seg p) -> symbol_demapper_1seg_sptr
        """
        this = _oneseg_swig.new_symbol_demapper_1seg_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(symbol_demapper_1seg_sptr self) -> symbol_demapper_1seg"""
        return _oneseg_swig.symbol_demapper_1seg_sptr___deref__(self)

    __swig_destroy__ = _oneseg_swig.delete_symbol_demapper_1seg_sptr
    __del__ = lambda self: None

    def make(self, mode, constellation_size):
        """make(symbol_demapper_1seg_sptr self, int mode, int constellation_size) -> symbol_demapper_1seg_sptr"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_make(self, mode, constellation_size)


    def history(self):
        """history(symbol_demapper_1seg_sptr self) -> unsigned int"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(symbol_demapper_1seg_sptr self, int which, int delay)
        declare_sample_delay(symbol_demapper_1seg_sptr self, unsigned int delay)
        """
        return _oneseg_swig.symbol_demapper_1seg_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(symbol_demapper_1seg_sptr self, int which) -> unsigned int"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(symbol_demapper_1seg_sptr self) -> int"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(symbol_demapper_1seg_sptr self) -> double"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_relative_rate(self)


    def start(self):
        """start(symbol_demapper_1seg_sptr self) -> bool"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_start(self)


    def stop(self):
        """stop(symbol_demapper_1seg_sptr self) -> bool"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(symbol_demapper_1seg_sptr self, unsigned int which_input) -> uint64_t"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(symbol_demapper_1seg_sptr self, unsigned int which_output) -> uint64_t"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(symbol_demapper_1seg_sptr self) -> int"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(symbol_demapper_1seg_sptr self, int m)"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(symbol_demapper_1seg_sptr self)"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(symbol_demapper_1seg_sptr self) -> bool"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(symbol_demapper_1seg_sptr self, int m)"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(symbol_demapper_1seg_sptr self) -> int"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(symbol_demapper_1seg_sptr self, int i) -> long"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(symbol_demapper_1seg_sptr self, long max_output_buffer)
        set_max_output_buffer(symbol_demapper_1seg_sptr self, int port, long max_output_buffer)
        """
        return _oneseg_swig.symbol_demapper_1seg_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(symbol_demapper_1seg_sptr self, int i) -> long"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(symbol_demapper_1seg_sptr self, long min_output_buffer)
        set_min_output_buffer(symbol_demapper_1seg_sptr self, int port, long min_output_buffer)
        """
        return _oneseg_swig.symbol_demapper_1seg_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(symbol_demapper_1seg_sptr self) -> float"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(symbol_demapper_1seg_sptr self) -> float"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(symbol_demapper_1seg_sptr self) -> float"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(symbol_demapper_1seg_sptr self) -> float"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(symbol_demapper_1seg_sptr self) -> float"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(symbol_demapper_1seg_sptr self) -> float"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(symbol_demapper_1seg_sptr self, int which) -> float
        pc_input_buffers_full(symbol_demapper_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.symbol_demapper_1seg_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(symbol_demapper_1seg_sptr self, int which) -> float
        pc_input_buffers_full_avg(symbol_demapper_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.symbol_demapper_1seg_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(symbol_demapper_1seg_sptr self, int which) -> float
        pc_input_buffers_full_var(symbol_demapper_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.symbol_demapper_1seg_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(symbol_demapper_1seg_sptr self, int which) -> float
        pc_output_buffers_full(symbol_demapper_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.symbol_demapper_1seg_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(symbol_demapper_1seg_sptr self, int which) -> float
        pc_output_buffers_full_avg(symbol_demapper_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.symbol_demapper_1seg_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(symbol_demapper_1seg_sptr self, int which) -> float
        pc_output_buffers_full_var(symbol_demapper_1seg_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.symbol_demapper_1seg_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(symbol_demapper_1seg_sptr self) -> float"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(symbol_demapper_1seg_sptr self) -> float"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(symbol_demapper_1seg_sptr self) -> float"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(symbol_demapper_1seg_sptr self) -> float"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(symbol_demapper_1seg_sptr self) -> float"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(symbol_demapper_1seg_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(symbol_demapper_1seg_sptr self)"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(symbol_demapper_1seg_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(symbol_demapper_1seg_sptr self) -> int"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(symbol_demapper_1seg_sptr self) -> int"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(symbol_demapper_1seg_sptr self, int priority) -> int"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(symbol_demapper_1seg_sptr self) -> std::string"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_name(self)


    def symbol_name(self):
        """symbol_name(symbol_demapper_1seg_sptr self) -> std::string"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(symbol_demapper_1seg_sptr self) -> io_signature_sptr"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(symbol_demapper_1seg_sptr self) -> io_signature_sptr"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(symbol_demapper_1seg_sptr self) -> long"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(symbol_demapper_1seg_sptr self) -> basic_block_sptr"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(symbol_demapper_1seg_sptr self, int ninputs, int noutputs) -> bool"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(symbol_demapper_1seg_sptr self) -> std::string"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(symbol_demapper_1seg_sptr self, std::string name)"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(symbol_demapper_1seg_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _oneseg_swig.symbol_demapper_1seg_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(symbol_demapper_1seg_sptr self) -> swig_int_ptr"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(symbol_demapper_1seg_sptr self) -> swig_int_ptr"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(symbol_demapper_1seg_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _oneseg_swig.symbol_demapper_1seg_sptr_message_subscribers(self, which_port)

symbol_demapper_1seg_sptr_swigregister = _oneseg_swig.symbol_demapper_1seg_sptr_swigregister
symbol_demapper_1seg_sptr_swigregister(symbol_demapper_1seg_sptr)


symbol_demapper_1seg_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
symbol_demapper_1seg = symbol_demapper_1seg.make;

class bit_deinterleaver(object):
    """Proxy of C++ gr::oneseg::bit_deinterleaver class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(mode, segments, constellation_size):
        """make(int mode, int segments, int constellation_size) -> bit_deinterleaver_sptr"""
        return _oneseg_swig.bit_deinterleaver_make(mode, segments, constellation_size)

    make = staticmethod(make)
    __swig_destroy__ = _oneseg_swig.delete_bit_deinterleaver
    __del__ = lambda self: None
bit_deinterleaver_swigregister = _oneseg_swig.bit_deinterleaver_swigregister
bit_deinterleaver_swigregister(bit_deinterleaver)

def bit_deinterleaver_make(mode, segments, constellation_size):
    """bit_deinterleaver_make(int mode, int segments, int constellation_size) -> bit_deinterleaver_sptr"""
    return _oneseg_swig.bit_deinterleaver_make(mode, segments, constellation_size)

class bit_deinterleaver_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::oneseg::bit_deinterleaver)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::oneseg::bit_deinterleaver)> self) -> bit_deinterleaver_sptr
        __init__(boost::shared_ptr<(gr::oneseg::bit_deinterleaver)> self, bit_deinterleaver p) -> bit_deinterleaver_sptr
        """
        this = _oneseg_swig.new_bit_deinterleaver_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(bit_deinterleaver_sptr self) -> bit_deinterleaver"""
        return _oneseg_swig.bit_deinterleaver_sptr___deref__(self)

    __swig_destroy__ = _oneseg_swig.delete_bit_deinterleaver_sptr
    __del__ = lambda self: None

    def make(self, mode, segments, constellation_size):
        """make(bit_deinterleaver_sptr self, int mode, int segments, int constellation_size) -> bit_deinterleaver_sptr"""
        return _oneseg_swig.bit_deinterleaver_sptr_make(self, mode, segments, constellation_size)


    def history(self):
        """history(bit_deinterleaver_sptr self) -> unsigned int"""
        return _oneseg_swig.bit_deinterleaver_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(bit_deinterleaver_sptr self, int which, int delay)
        declare_sample_delay(bit_deinterleaver_sptr self, unsigned int delay)
        """
        return _oneseg_swig.bit_deinterleaver_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(bit_deinterleaver_sptr self, int which) -> unsigned int"""
        return _oneseg_swig.bit_deinterleaver_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(bit_deinterleaver_sptr self) -> int"""
        return _oneseg_swig.bit_deinterleaver_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(bit_deinterleaver_sptr self) -> double"""
        return _oneseg_swig.bit_deinterleaver_sptr_relative_rate(self)


    def start(self):
        """start(bit_deinterleaver_sptr self) -> bool"""
        return _oneseg_swig.bit_deinterleaver_sptr_start(self)


    def stop(self):
        """stop(bit_deinterleaver_sptr self) -> bool"""
        return _oneseg_swig.bit_deinterleaver_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(bit_deinterleaver_sptr self, unsigned int which_input) -> uint64_t"""
        return _oneseg_swig.bit_deinterleaver_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(bit_deinterleaver_sptr self, unsigned int which_output) -> uint64_t"""
        return _oneseg_swig.bit_deinterleaver_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(bit_deinterleaver_sptr self) -> int"""
        return _oneseg_swig.bit_deinterleaver_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(bit_deinterleaver_sptr self, int m)"""
        return _oneseg_swig.bit_deinterleaver_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(bit_deinterleaver_sptr self)"""
        return _oneseg_swig.bit_deinterleaver_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(bit_deinterleaver_sptr self) -> bool"""
        return _oneseg_swig.bit_deinterleaver_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(bit_deinterleaver_sptr self, int m)"""
        return _oneseg_swig.bit_deinterleaver_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(bit_deinterleaver_sptr self) -> int"""
        return _oneseg_swig.bit_deinterleaver_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(bit_deinterleaver_sptr self, int i) -> long"""
        return _oneseg_swig.bit_deinterleaver_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(bit_deinterleaver_sptr self, long max_output_buffer)
        set_max_output_buffer(bit_deinterleaver_sptr self, int port, long max_output_buffer)
        """
        return _oneseg_swig.bit_deinterleaver_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(bit_deinterleaver_sptr self, int i) -> long"""
        return _oneseg_swig.bit_deinterleaver_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(bit_deinterleaver_sptr self, long min_output_buffer)
        set_min_output_buffer(bit_deinterleaver_sptr self, int port, long min_output_buffer)
        """
        return _oneseg_swig.bit_deinterleaver_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(bit_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.bit_deinterleaver_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(bit_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.bit_deinterleaver_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(bit_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.bit_deinterleaver_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(bit_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.bit_deinterleaver_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(bit_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.bit_deinterleaver_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(bit_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.bit_deinterleaver_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(bit_deinterleaver_sptr self, int which) -> float
        pc_input_buffers_full(bit_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.bit_deinterleaver_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(bit_deinterleaver_sptr self, int which) -> float
        pc_input_buffers_full_avg(bit_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.bit_deinterleaver_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(bit_deinterleaver_sptr self, int which) -> float
        pc_input_buffers_full_var(bit_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.bit_deinterleaver_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(bit_deinterleaver_sptr self, int which) -> float
        pc_output_buffers_full(bit_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.bit_deinterleaver_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(bit_deinterleaver_sptr self, int which) -> float
        pc_output_buffers_full_avg(bit_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.bit_deinterleaver_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(bit_deinterleaver_sptr self, int which) -> float
        pc_output_buffers_full_var(bit_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.bit_deinterleaver_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(bit_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.bit_deinterleaver_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(bit_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.bit_deinterleaver_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(bit_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.bit_deinterleaver_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(bit_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.bit_deinterleaver_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(bit_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.bit_deinterleaver_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(bit_deinterleaver_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _oneseg_swig.bit_deinterleaver_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(bit_deinterleaver_sptr self)"""
        return _oneseg_swig.bit_deinterleaver_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(bit_deinterleaver_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _oneseg_swig.bit_deinterleaver_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(bit_deinterleaver_sptr self) -> int"""
        return _oneseg_swig.bit_deinterleaver_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(bit_deinterleaver_sptr self) -> int"""
        return _oneseg_swig.bit_deinterleaver_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(bit_deinterleaver_sptr self, int priority) -> int"""
        return _oneseg_swig.bit_deinterleaver_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(bit_deinterleaver_sptr self) -> std::string"""
        return _oneseg_swig.bit_deinterleaver_sptr_name(self)


    def symbol_name(self):
        """symbol_name(bit_deinterleaver_sptr self) -> std::string"""
        return _oneseg_swig.bit_deinterleaver_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(bit_deinterleaver_sptr self) -> io_signature_sptr"""
        return _oneseg_swig.bit_deinterleaver_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(bit_deinterleaver_sptr self) -> io_signature_sptr"""
        return _oneseg_swig.bit_deinterleaver_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(bit_deinterleaver_sptr self) -> long"""
        return _oneseg_swig.bit_deinterleaver_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(bit_deinterleaver_sptr self) -> basic_block_sptr"""
        return _oneseg_swig.bit_deinterleaver_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(bit_deinterleaver_sptr self, int ninputs, int noutputs) -> bool"""
        return _oneseg_swig.bit_deinterleaver_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(bit_deinterleaver_sptr self) -> std::string"""
        return _oneseg_swig.bit_deinterleaver_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(bit_deinterleaver_sptr self, std::string name)"""
        return _oneseg_swig.bit_deinterleaver_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(bit_deinterleaver_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _oneseg_swig.bit_deinterleaver_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(bit_deinterleaver_sptr self) -> swig_int_ptr"""
        return _oneseg_swig.bit_deinterleaver_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(bit_deinterleaver_sptr self) -> swig_int_ptr"""
        return _oneseg_swig.bit_deinterleaver_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(bit_deinterleaver_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _oneseg_swig.bit_deinterleaver_sptr_message_subscribers(self, which_port)

bit_deinterleaver_sptr_swigregister = _oneseg_swig.bit_deinterleaver_sptr_swigregister
bit_deinterleaver_sptr_swigregister(bit_deinterleaver_sptr)


bit_deinterleaver_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
bit_deinterleaver = bit_deinterleaver.make;

class viterbi_decoder(object):
    """Proxy of C++ gr::oneseg::viterbi_decoder class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make(constellation_size, rate):
        """make(int constellation_size, int rate) -> viterbi_decoder_sptr"""
        return _oneseg_swig.viterbi_decoder_make(constellation_size, rate)

    make = staticmethod(make)
    __swig_destroy__ = _oneseg_swig.delete_viterbi_decoder
    __del__ = lambda self: None
viterbi_decoder_swigregister = _oneseg_swig.viterbi_decoder_swigregister
viterbi_decoder_swigregister(viterbi_decoder)

def viterbi_decoder_make(constellation_size, rate):
    """viterbi_decoder_make(int constellation_size, int rate) -> viterbi_decoder_sptr"""
    return _oneseg_swig.viterbi_decoder_make(constellation_size, rate)

class viterbi_decoder_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::oneseg::viterbi_decoder)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::oneseg::viterbi_decoder)> self) -> viterbi_decoder_sptr
        __init__(boost::shared_ptr<(gr::oneseg::viterbi_decoder)> self, viterbi_decoder p) -> viterbi_decoder_sptr
        """
        this = _oneseg_swig.new_viterbi_decoder_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(viterbi_decoder_sptr self) -> viterbi_decoder"""
        return _oneseg_swig.viterbi_decoder_sptr___deref__(self)

    __swig_destroy__ = _oneseg_swig.delete_viterbi_decoder_sptr
    __del__ = lambda self: None

    def make(self, constellation_size, rate):
        """make(viterbi_decoder_sptr self, int constellation_size, int rate) -> viterbi_decoder_sptr"""
        return _oneseg_swig.viterbi_decoder_sptr_make(self, constellation_size, rate)


    def history(self):
        """history(viterbi_decoder_sptr self) -> unsigned int"""
        return _oneseg_swig.viterbi_decoder_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(viterbi_decoder_sptr self, int which, int delay)
        declare_sample_delay(viterbi_decoder_sptr self, unsigned int delay)
        """
        return _oneseg_swig.viterbi_decoder_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(viterbi_decoder_sptr self, int which) -> unsigned int"""
        return _oneseg_swig.viterbi_decoder_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(viterbi_decoder_sptr self) -> int"""
        return _oneseg_swig.viterbi_decoder_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(viterbi_decoder_sptr self) -> double"""
        return _oneseg_swig.viterbi_decoder_sptr_relative_rate(self)


    def start(self):
        """start(viterbi_decoder_sptr self) -> bool"""
        return _oneseg_swig.viterbi_decoder_sptr_start(self)


    def stop(self):
        """stop(viterbi_decoder_sptr self) -> bool"""
        return _oneseg_swig.viterbi_decoder_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(viterbi_decoder_sptr self, unsigned int which_input) -> uint64_t"""
        return _oneseg_swig.viterbi_decoder_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(viterbi_decoder_sptr self, unsigned int which_output) -> uint64_t"""
        return _oneseg_swig.viterbi_decoder_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(viterbi_decoder_sptr self) -> int"""
        return _oneseg_swig.viterbi_decoder_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(viterbi_decoder_sptr self, int m)"""
        return _oneseg_swig.viterbi_decoder_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(viterbi_decoder_sptr self)"""
        return _oneseg_swig.viterbi_decoder_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(viterbi_decoder_sptr self) -> bool"""
        return _oneseg_swig.viterbi_decoder_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(viterbi_decoder_sptr self, int m)"""
        return _oneseg_swig.viterbi_decoder_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(viterbi_decoder_sptr self) -> int"""
        return _oneseg_swig.viterbi_decoder_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(viterbi_decoder_sptr self, int i) -> long"""
        return _oneseg_swig.viterbi_decoder_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(viterbi_decoder_sptr self, long max_output_buffer)
        set_max_output_buffer(viterbi_decoder_sptr self, int port, long max_output_buffer)
        """
        return _oneseg_swig.viterbi_decoder_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(viterbi_decoder_sptr self, int i) -> long"""
        return _oneseg_swig.viterbi_decoder_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(viterbi_decoder_sptr self, long min_output_buffer)
        set_min_output_buffer(viterbi_decoder_sptr self, int port, long min_output_buffer)
        """
        return _oneseg_swig.viterbi_decoder_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(viterbi_decoder_sptr self) -> float"""
        return _oneseg_swig.viterbi_decoder_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(viterbi_decoder_sptr self) -> float"""
        return _oneseg_swig.viterbi_decoder_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(viterbi_decoder_sptr self) -> float"""
        return _oneseg_swig.viterbi_decoder_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(viterbi_decoder_sptr self) -> float"""
        return _oneseg_swig.viterbi_decoder_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(viterbi_decoder_sptr self) -> float"""
        return _oneseg_swig.viterbi_decoder_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(viterbi_decoder_sptr self) -> float"""
        return _oneseg_swig.viterbi_decoder_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(viterbi_decoder_sptr self, int which) -> float
        pc_input_buffers_full(viterbi_decoder_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.viterbi_decoder_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(viterbi_decoder_sptr self, int which) -> float
        pc_input_buffers_full_avg(viterbi_decoder_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.viterbi_decoder_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(viterbi_decoder_sptr self, int which) -> float
        pc_input_buffers_full_var(viterbi_decoder_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.viterbi_decoder_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(viterbi_decoder_sptr self, int which) -> float
        pc_output_buffers_full(viterbi_decoder_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.viterbi_decoder_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(viterbi_decoder_sptr self, int which) -> float
        pc_output_buffers_full_avg(viterbi_decoder_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.viterbi_decoder_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(viterbi_decoder_sptr self, int which) -> float
        pc_output_buffers_full_var(viterbi_decoder_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.viterbi_decoder_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(viterbi_decoder_sptr self) -> float"""
        return _oneseg_swig.viterbi_decoder_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(viterbi_decoder_sptr self) -> float"""
        return _oneseg_swig.viterbi_decoder_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(viterbi_decoder_sptr self) -> float"""
        return _oneseg_swig.viterbi_decoder_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(viterbi_decoder_sptr self) -> float"""
        return _oneseg_swig.viterbi_decoder_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(viterbi_decoder_sptr self) -> float"""
        return _oneseg_swig.viterbi_decoder_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(viterbi_decoder_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _oneseg_swig.viterbi_decoder_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(viterbi_decoder_sptr self)"""
        return _oneseg_swig.viterbi_decoder_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(viterbi_decoder_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _oneseg_swig.viterbi_decoder_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(viterbi_decoder_sptr self) -> int"""
        return _oneseg_swig.viterbi_decoder_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(viterbi_decoder_sptr self) -> int"""
        return _oneseg_swig.viterbi_decoder_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(viterbi_decoder_sptr self, int priority) -> int"""
        return _oneseg_swig.viterbi_decoder_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(viterbi_decoder_sptr self) -> std::string"""
        return _oneseg_swig.viterbi_decoder_sptr_name(self)


    def symbol_name(self):
        """symbol_name(viterbi_decoder_sptr self) -> std::string"""
        return _oneseg_swig.viterbi_decoder_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(viterbi_decoder_sptr self) -> io_signature_sptr"""
        return _oneseg_swig.viterbi_decoder_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(viterbi_decoder_sptr self) -> io_signature_sptr"""
        return _oneseg_swig.viterbi_decoder_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(viterbi_decoder_sptr self) -> long"""
        return _oneseg_swig.viterbi_decoder_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(viterbi_decoder_sptr self) -> basic_block_sptr"""
        return _oneseg_swig.viterbi_decoder_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(viterbi_decoder_sptr self, int ninputs, int noutputs) -> bool"""
        return _oneseg_swig.viterbi_decoder_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(viterbi_decoder_sptr self) -> std::string"""
        return _oneseg_swig.viterbi_decoder_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(viterbi_decoder_sptr self, std::string name)"""
        return _oneseg_swig.viterbi_decoder_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(viterbi_decoder_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _oneseg_swig.viterbi_decoder_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(viterbi_decoder_sptr self) -> swig_int_ptr"""
        return _oneseg_swig.viterbi_decoder_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(viterbi_decoder_sptr self) -> swig_int_ptr"""
        return _oneseg_swig.viterbi_decoder_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(viterbi_decoder_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _oneseg_swig.viterbi_decoder_sptr_message_subscribers(self, which_port)

viterbi_decoder_sptr_swigregister = _oneseg_swig.viterbi_decoder_sptr_swigregister
viterbi_decoder_sptr_swigregister(viterbi_decoder_sptr)


viterbi_decoder_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
viterbi_decoder = viterbi_decoder.make;

class byte_deinterleaver(object):
    """Proxy of C++ gr::oneseg::byte_deinterleaver class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> byte_deinterleaver_sptr"""
        return _oneseg_swig.byte_deinterleaver_make()

    make = staticmethod(make)
    __swig_destroy__ = _oneseg_swig.delete_byte_deinterleaver
    __del__ = lambda self: None
byte_deinterleaver_swigregister = _oneseg_swig.byte_deinterleaver_swigregister
byte_deinterleaver_swigregister(byte_deinterleaver)

def byte_deinterleaver_make():
    """byte_deinterleaver_make() -> byte_deinterleaver_sptr"""
    return _oneseg_swig.byte_deinterleaver_make()

class byte_deinterleaver_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::oneseg::byte_deinterleaver)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::oneseg::byte_deinterleaver)> self) -> byte_deinterleaver_sptr
        __init__(boost::shared_ptr<(gr::oneseg::byte_deinterleaver)> self, byte_deinterleaver p) -> byte_deinterleaver_sptr
        """
        this = _oneseg_swig.new_byte_deinterleaver_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(byte_deinterleaver_sptr self) -> byte_deinterleaver"""
        return _oneseg_swig.byte_deinterleaver_sptr___deref__(self)

    __swig_destroy__ = _oneseg_swig.delete_byte_deinterleaver_sptr
    __del__ = lambda self: None

    def make(self):
        """make(byte_deinterleaver_sptr self) -> byte_deinterleaver_sptr"""
        return _oneseg_swig.byte_deinterleaver_sptr_make(self)


    def history(self):
        """history(byte_deinterleaver_sptr self) -> unsigned int"""
        return _oneseg_swig.byte_deinterleaver_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(byte_deinterleaver_sptr self, int which, int delay)
        declare_sample_delay(byte_deinterleaver_sptr self, unsigned int delay)
        """
        return _oneseg_swig.byte_deinterleaver_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(byte_deinterleaver_sptr self, int which) -> unsigned int"""
        return _oneseg_swig.byte_deinterleaver_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(byte_deinterleaver_sptr self) -> int"""
        return _oneseg_swig.byte_deinterleaver_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(byte_deinterleaver_sptr self) -> double"""
        return _oneseg_swig.byte_deinterleaver_sptr_relative_rate(self)


    def start(self):
        """start(byte_deinterleaver_sptr self) -> bool"""
        return _oneseg_swig.byte_deinterleaver_sptr_start(self)


    def stop(self):
        """stop(byte_deinterleaver_sptr self) -> bool"""
        return _oneseg_swig.byte_deinterleaver_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(byte_deinterleaver_sptr self, unsigned int which_input) -> uint64_t"""
        return _oneseg_swig.byte_deinterleaver_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(byte_deinterleaver_sptr self, unsigned int which_output) -> uint64_t"""
        return _oneseg_swig.byte_deinterleaver_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(byte_deinterleaver_sptr self) -> int"""
        return _oneseg_swig.byte_deinterleaver_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(byte_deinterleaver_sptr self, int m)"""
        return _oneseg_swig.byte_deinterleaver_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(byte_deinterleaver_sptr self)"""
        return _oneseg_swig.byte_deinterleaver_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(byte_deinterleaver_sptr self) -> bool"""
        return _oneseg_swig.byte_deinterleaver_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(byte_deinterleaver_sptr self, int m)"""
        return _oneseg_swig.byte_deinterleaver_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(byte_deinterleaver_sptr self) -> int"""
        return _oneseg_swig.byte_deinterleaver_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(byte_deinterleaver_sptr self, int i) -> long"""
        return _oneseg_swig.byte_deinterleaver_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(byte_deinterleaver_sptr self, long max_output_buffer)
        set_max_output_buffer(byte_deinterleaver_sptr self, int port, long max_output_buffer)
        """
        return _oneseg_swig.byte_deinterleaver_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(byte_deinterleaver_sptr self, int i) -> long"""
        return _oneseg_swig.byte_deinterleaver_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(byte_deinterleaver_sptr self, long min_output_buffer)
        set_min_output_buffer(byte_deinterleaver_sptr self, int port, long min_output_buffer)
        """
        return _oneseg_swig.byte_deinterleaver_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(byte_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.byte_deinterleaver_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(byte_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.byte_deinterleaver_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(byte_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.byte_deinterleaver_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(byte_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.byte_deinterleaver_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(byte_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.byte_deinterleaver_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(byte_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.byte_deinterleaver_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(byte_deinterleaver_sptr self, int which) -> float
        pc_input_buffers_full(byte_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.byte_deinterleaver_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(byte_deinterleaver_sptr self, int which) -> float
        pc_input_buffers_full_avg(byte_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.byte_deinterleaver_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(byte_deinterleaver_sptr self, int which) -> float
        pc_input_buffers_full_var(byte_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.byte_deinterleaver_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(byte_deinterleaver_sptr self, int which) -> float
        pc_output_buffers_full(byte_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.byte_deinterleaver_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(byte_deinterleaver_sptr self, int which) -> float
        pc_output_buffers_full_avg(byte_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.byte_deinterleaver_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(byte_deinterleaver_sptr self, int which) -> float
        pc_output_buffers_full_var(byte_deinterleaver_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.byte_deinterleaver_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(byte_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.byte_deinterleaver_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(byte_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.byte_deinterleaver_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(byte_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.byte_deinterleaver_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(byte_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.byte_deinterleaver_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(byte_deinterleaver_sptr self) -> float"""
        return _oneseg_swig.byte_deinterleaver_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(byte_deinterleaver_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _oneseg_swig.byte_deinterleaver_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(byte_deinterleaver_sptr self)"""
        return _oneseg_swig.byte_deinterleaver_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(byte_deinterleaver_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _oneseg_swig.byte_deinterleaver_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(byte_deinterleaver_sptr self) -> int"""
        return _oneseg_swig.byte_deinterleaver_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(byte_deinterleaver_sptr self) -> int"""
        return _oneseg_swig.byte_deinterleaver_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(byte_deinterleaver_sptr self, int priority) -> int"""
        return _oneseg_swig.byte_deinterleaver_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(byte_deinterleaver_sptr self) -> std::string"""
        return _oneseg_swig.byte_deinterleaver_sptr_name(self)


    def symbol_name(self):
        """symbol_name(byte_deinterleaver_sptr self) -> std::string"""
        return _oneseg_swig.byte_deinterleaver_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(byte_deinterleaver_sptr self) -> io_signature_sptr"""
        return _oneseg_swig.byte_deinterleaver_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(byte_deinterleaver_sptr self) -> io_signature_sptr"""
        return _oneseg_swig.byte_deinterleaver_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(byte_deinterleaver_sptr self) -> long"""
        return _oneseg_swig.byte_deinterleaver_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(byte_deinterleaver_sptr self) -> basic_block_sptr"""
        return _oneseg_swig.byte_deinterleaver_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(byte_deinterleaver_sptr self, int ninputs, int noutputs) -> bool"""
        return _oneseg_swig.byte_deinterleaver_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(byte_deinterleaver_sptr self) -> std::string"""
        return _oneseg_swig.byte_deinterleaver_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(byte_deinterleaver_sptr self, std::string name)"""
        return _oneseg_swig.byte_deinterleaver_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(byte_deinterleaver_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _oneseg_swig.byte_deinterleaver_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(byte_deinterleaver_sptr self) -> swig_int_ptr"""
        return _oneseg_swig.byte_deinterleaver_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(byte_deinterleaver_sptr self) -> swig_int_ptr"""
        return _oneseg_swig.byte_deinterleaver_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(byte_deinterleaver_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _oneseg_swig.byte_deinterleaver_sptr_message_subscribers(self, which_port)

byte_deinterleaver_sptr_swigregister = _oneseg_swig.byte_deinterleaver_sptr_swigregister
byte_deinterleaver_sptr_swigregister(byte_deinterleaver_sptr)


byte_deinterleaver_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
byte_deinterleaver = byte_deinterleaver.make;

class energy_descrambler(object):
    """Proxy of C++ gr::oneseg::energy_descrambler class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> energy_descrambler_sptr"""
        return _oneseg_swig.energy_descrambler_make()

    make = staticmethod(make)
    __swig_destroy__ = _oneseg_swig.delete_energy_descrambler
    __del__ = lambda self: None
energy_descrambler_swigregister = _oneseg_swig.energy_descrambler_swigregister
energy_descrambler_swigregister(energy_descrambler)

def energy_descrambler_make():
    """energy_descrambler_make() -> energy_descrambler_sptr"""
    return _oneseg_swig.energy_descrambler_make()

class energy_descrambler_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::oneseg::energy_descrambler)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::oneseg::energy_descrambler)> self) -> energy_descrambler_sptr
        __init__(boost::shared_ptr<(gr::oneseg::energy_descrambler)> self, energy_descrambler p) -> energy_descrambler_sptr
        """
        this = _oneseg_swig.new_energy_descrambler_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(energy_descrambler_sptr self) -> energy_descrambler"""
        return _oneseg_swig.energy_descrambler_sptr___deref__(self)

    __swig_destroy__ = _oneseg_swig.delete_energy_descrambler_sptr
    __del__ = lambda self: None

    def make(self):
        """make(energy_descrambler_sptr self) -> energy_descrambler_sptr"""
        return _oneseg_swig.energy_descrambler_sptr_make(self)


    def history(self):
        """history(energy_descrambler_sptr self) -> unsigned int"""
        return _oneseg_swig.energy_descrambler_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(energy_descrambler_sptr self, int which, int delay)
        declare_sample_delay(energy_descrambler_sptr self, unsigned int delay)
        """
        return _oneseg_swig.energy_descrambler_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(energy_descrambler_sptr self, int which) -> unsigned int"""
        return _oneseg_swig.energy_descrambler_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(energy_descrambler_sptr self) -> int"""
        return _oneseg_swig.energy_descrambler_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(energy_descrambler_sptr self) -> double"""
        return _oneseg_swig.energy_descrambler_sptr_relative_rate(self)


    def start(self):
        """start(energy_descrambler_sptr self) -> bool"""
        return _oneseg_swig.energy_descrambler_sptr_start(self)


    def stop(self):
        """stop(energy_descrambler_sptr self) -> bool"""
        return _oneseg_swig.energy_descrambler_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(energy_descrambler_sptr self, unsigned int which_input) -> uint64_t"""
        return _oneseg_swig.energy_descrambler_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(energy_descrambler_sptr self, unsigned int which_output) -> uint64_t"""
        return _oneseg_swig.energy_descrambler_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(energy_descrambler_sptr self) -> int"""
        return _oneseg_swig.energy_descrambler_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(energy_descrambler_sptr self, int m)"""
        return _oneseg_swig.energy_descrambler_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(energy_descrambler_sptr self)"""
        return _oneseg_swig.energy_descrambler_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(energy_descrambler_sptr self) -> bool"""
        return _oneseg_swig.energy_descrambler_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(energy_descrambler_sptr self, int m)"""
        return _oneseg_swig.energy_descrambler_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(energy_descrambler_sptr self) -> int"""
        return _oneseg_swig.energy_descrambler_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(energy_descrambler_sptr self, int i) -> long"""
        return _oneseg_swig.energy_descrambler_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(energy_descrambler_sptr self, long max_output_buffer)
        set_max_output_buffer(energy_descrambler_sptr self, int port, long max_output_buffer)
        """
        return _oneseg_swig.energy_descrambler_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(energy_descrambler_sptr self, int i) -> long"""
        return _oneseg_swig.energy_descrambler_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(energy_descrambler_sptr self, long min_output_buffer)
        set_min_output_buffer(energy_descrambler_sptr self, int port, long min_output_buffer)
        """
        return _oneseg_swig.energy_descrambler_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(energy_descrambler_sptr self) -> float"""
        return _oneseg_swig.energy_descrambler_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(energy_descrambler_sptr self) -> float"""
        return _oneseg_swig.energy_descrambler_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(energy_descrambler_sptr self) -> float"""
        return _oneseg_swig.energy_descrambler_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(energy_descrambler_sptr self) -> float"""
        return _oneseg_swig.energy_descrambler_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(energy_descrambler_sptr self) -> float"""
        return _oneseg_swig.energy_descrambler_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(energy_descrambler_sptr self) -> float"""
        return _oneseg_swig.energy_descrambler_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(energy_descrambler_sptr self, int which) -> float
        pc_input_buffers_full(energy_descrambler_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.energy_descrambler_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(energy_descrambler_sptr self, int which) -> float
        pc_input_buffers_full_avg(energy_descrambler_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.energy_descrambler_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(energy_descrambler_sptr self, int which) -> float
        pc_input_buffers_full_var(energy_descrambler_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.energy_descrambler_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(energy_descrambler_sptr self, int which) -> float
        pc_output_buffers_full(energy_descrambler_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.energy_descrambler_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(energy_descrambler_sptr self, int which) -> float
        pc_output_buffers_full_avg(energy_descrambler_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.energy_descrambler_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(energy_descrambler_sptr self, int which) -> float
        pc_output_buffers_full_var(energy_descrambler_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.energy_descrambler_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(energy_descrambler_sptr self) -> float"""
        return _oneseg_swig.energy_descrambler_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(energy_descrambler_sptr self) -> float"""
        return _oneseg_swig.energy_descrambler_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(energy_descrambler_sptr self) -> float"""
        return _oneseg_swig.energy_descrambler_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(energy_descrambler_sptr self) -> float"""
        return _oneseg_swig.energy_descrambler_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(energy_descrambler_sptr self) -> float"""
        return _oneseg_swig.energy_descrambler_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(energy_descrambler_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _oneseg_swig.energy_descrambler_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(energy_descrambler_sptr self)"""
        return _oneseg_swig.energy_descrambler_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(energy_descrambler_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _oneseg_swig.energy_descrambler_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(energy_descrambler_sptr self) -> int"""
        return _oneseg_swig.energy_descrambler_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(energy_descrambler_sptr self) -> int"""
        return _oneseg_swig.energy_descrambler_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(energy_descrambler_sptr self, int priority) -> int"""
        return _oneseg_swig.energy_descrambler_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(energy_descrambler_sptr self) -> std::string"""
        return _oneseg_swig.energy_descrambler_sptr_name(self)


    def symbol_name(self):
        """symbol_name(energy_descrambler_sptr self) -> std::string"""
        return _oneseg_swig.energy_descrambler_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(energy_descrambler_sptr self) -> io_signature_sptr"""
        return _oneseg_swig.energy_descrambler_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(energy_descrambler_sptr self) -> io_signature_sptr"""
        return _oneseg_swig.energy_descrambler_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(energy_descrambler_sptr self) -> long"""
        return _oneseg_swig.energy_descrambler_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(energy_descrambler_sptr self) -> basic_block_sptr"""
        return _oneseg_swig.energy_descrambler_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(energy_descrambler_sptr self, int ninputs, int noutputs) -> bool"""
        return _oneseg_swig.energy_descrambler_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(energy_descrambler_sptr self) -> std::string"""
        return _oneseg_swig.energy_descrambler_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(energy_descrambler_sptr self, std::string name)"""
        return _oneseg_swig.energy_descrambler_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(energy_descrambler_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _oneseg_swig.energy_descrambler_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(energy_descrambler_sptr self) -> swig_int_ptr"""
        return _oneseg_swig.energy_descrambler_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(energy_descrambler_sptr self) -> swig_int_ptr"""
        return _oneseg_swig.energy_descrambler_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(energy_descrambler_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _oneseg_swig.energy_descrambler_sptr_message_subscribers(self, which_port)

energy_descrambler_sptr_swigregister = _oneseg_swig.energy_descrambler_sptr_swigregister
energy_descrambler_sptr_swigregister(energy_descrambler_sptr)


energy_descrambler_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
energy_descrambler = energy_descrambler.make;

class reed_solomon_dec_isdbt(object):
    """Proxy of C++ gr::oneseg::reed_solomon_dec_isdbt class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def make():
        """make() -> reed_solomon_dec_isdbt_sptr"""
        return _oneseg_swig.reed_solomon_dec_isdbt_make()

    make = staticmethod(make)
    __swig_destroy__ = _oneseg_swig.delete_reed_solomon_dec_isdbt
    __del__ = lambda self: None
reed_solomon_dec_isdbt_swigregister = _oneseg_swig.reed_solomon_dec_isdbt_swigregister
reed_solomon_dec_isdbt_swigregister(reed_solomon_dec_isdbt)

def reed_solomon_dec_isdbt_make():
    """reed_solomon_dec_isdbt_make() -> reed_solomon_dec_isdbt_sptr"""
    return _oneseg_swig.reed_solomon_dec_isdbt_make()

class reed_solomon_dec_isdbt_sptr(object):
    """Proxy of C++ boost::shared_ptr<(gr::oneseg::reed_solomon_dec_isdbt)> class."""

    thisown = _swig_property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc='The membership flag')
    __repr__ = _swig_repr

    def __init__(self, *args):
        """
        __init__(boost::shared_ptr<(gr::oneseg::reed_solomon_dec_isdbt)> self) -> reed_solomon_dec_isdbt_sptr
        __init__(boost::shared_ptr<(gr::oneseg::reed_solomon_dec_isdbt)> self, reed_solomon_dec_isdbt p) -> reed_solomon_dec_isdbt_sptr
        """
        this = _oneseg_swig.new_reed_solomon_dec_isdbt_sptr(*args)
        try:
            self.this.append(this)
        except Exception:
            self.this = this

    def __deref__(self):
        """__deref__(reed_solomon_dec_isdbt_sptr self) -> reed_solomon_dec_isdbt"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr___deref__(self)

    __swig_destroy__ = _oneseg_swig.delete_reed_solomon_dec_isdbt_sptr
    __del__ = lambda self: None

    def make(self):
        """make(reed_solomon_dec_isdbt_sptr self) -> reed_solomon_dec_isdbt_sptr"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_make(self)


    def history(self):
        """history(reed_solomon_dec_isdbt_sptr self) -> unsigned int"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_history(self)


    def declare_sample_delay(self, *args):
        """
        declare_sample_delay(reed_solomon_dec_isdbt_sptr self, int which, int delay)
        declare_sample_delay(reed_solomon_dec_isdbt_sptr self, unsigned int delay)
        """
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_declare_sample_delay(self, *args)


    def sample_delay(self, which):
        """sample_delay(reed_solomon_dec_isdbt_sptr self, int which) -> unsigned int"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_sample_delay(self, which)


    def output_multiple(self):
        """output_multiple(reed_solomon_dec_isdbt_sptr self) -> int"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_output_multiple(self)


    def relative_rate(self):
        """relative_rate(reed_solomon_dec_isdbt_sptr self) -> double"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_relative_rate(self)


    def start(self):
        """start(reed_solomon_dec_isdbt_sptr self) -> bool"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_start(self)


    def stop(self):
        """stop(reed_solomon_dec_isdbt_sptr self) -> bool"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_stop(self)


    def nitems_read(self, which_input):
        """nitems_read(reed_solomon_dec_isdbt_sptr self, unsigned int which_input) -> uint64_t"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_nitems_read(self, which_input)


    def nitems_written(self, which_output):
        """nitems_written(reed_solomon_dec_isdbt_sptr self, unsigned int which_output) -> uint64_t"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_nitems_written(self, which_output)


    def max_noutput_items(self):
        """max_noutput_items(reed_solomon_dec_isdbt_sptr self) -> int"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_max_noutput_items(self)


    def set_max_noutput_items(self, m):
        """set_max_noutput_items(reed_solomon_dec_isdbt_sptr self, int m)"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_set_max_noutput_items(self, m)


    def unset_max_noutput_items(self):
        """unset_max_noutput_items(reed_solomon_dec_isdbt_sptr self)"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_unset_max_noutput_items(self)


    def is_set_max_noutput_items(self):
        """is_set_max_noutput_items(reed_solomon_dec_isdbt_sptr self) -> bool"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_is_set_max_noutput_items(self)


    def set_min_noutput_items(self, m):
        """set_min_noutput_items(reed_solomon_dec_isdbt_sptr self, int m)"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_set_min_noutput_items(self, m)


    def min_noutput_items(self):
        """min_noutput_items(reed_solomon_dec_isdbt_sptr self) -> int"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_min_noutput_items(self)


    def max_output_buffer(self, i):
        """max_output_buffer(reed_solomon_dec_isdbt_sptr self, int i) -> long"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_max_output_buffer(self, i)


    def set_max_output_buffer(self, *args):
        """
        set_max_output_buffer(reed_solomon_dec_isdbt_sptr self, long max_output_buffer)
        set_max_output_buffer(reed_solomon_dec_isdbt_sptr self, int port, long max_output_buffer)
        """
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_set_max_output_buffer(self, *args)


    def min_output_buffer(self, i):
        """min_output_buffer(reed_solomon_dec_isdbt_sptr self, int i) -> long"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_min_output_buffer(self, i)


    def set_min_output_buffer(self, *args):
        """
        set_min_output_buffer(reed_solomon_dec_isdbt_sptr self, long min_output_buffer)
        set_min_output_buffer(reed_solomon_dec_isdbt_sptr self, int port, long min_output_buffer)
        """
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_set_min_output_buffer(self, *args)


    def pc_noutput_items(self):
        """pc_noutput_items(reed_solomon_dec_isdbt_sptr self) -> float"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_pc_noutput_items(self)


    def pc_noutput_items_avg(self):
        """pc_noutput_items_avg(reed_solomon_dec_isdbt_sptr self) -> float"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_pc_noutput_items_avg(self)


    def pc_noutput_items_var(self):
        """pc_noutput_items_var(reed_solomon_dec_isdbt_sptr self) -> float"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_pc_noutput_items_var(self)


    def pc_nproduced(self):
        """pc_nproduced(reed_solomon_dec_isdbt_sptr self) -> float"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_pc_nproduced(self)


    def pc_nproduced_avg(self):
        """pc_nproduced_avg(reed_solomon_dec_isdbt_sptr self) -> float"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_pc_nproduced_avg(self)


    def pc_nproduced_var(self):
        """pc_nproduced_var(reed_solomon_dec_isdbt_sptr self) -> float"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_pc_nproduced_var(self)


    def pc_input_buffers_full(self, *args):
        """
        pc_input_buffers_full(reed_solomon_dec_isdbt_sptr self, int which) -> float
        pc_input_buffers_full(reed_solomon_dec_isdbt_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_pc_input_buffers_full(self, *args)


    def pc_input_buffers_full_avg(self, *args):
        """
        pc_input_buffers_full_avg(reed_solomon_dec_isdbt_sptr self, int which) -> float
        pc_input_buffers_full_avg(reed_solomon_dec_isdbt_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_pc_input_buffers_full_avg(self, *args)


    def pc_input_buffers_full_var(self, *args):
        """
        pc_input_buffers_full_var(reed_solomon_dec_isdbt_sptr self, int which) -> float
        pc_input_buffers_full_var(reed_solomon_dec_isdbt_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_pc_input_buffers_full_var(self, *args)


    def pc_output_buffers_full(self, *args):
        """
        pc_output_buffers_full(reed_solomon_dec_isdbt_sptr self, int which) -> float
        pc_output_buffers_full(reed_solomon_dec_isdbt_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_pc_output_buffers_full(self, *args)


    def pc_output_buffers_full_avg(self, *args):
        """
        pc_output_buffers_full_avg(reed_solomon_dec_isdbt_sptr self, int which) -> float
        pc_output_buffers_full_avg(reed_solomon_dec_isdbt_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_pc_output_buffers_full_avg(self, *args)


    def pc_output_buffers_full_var(self, *args):
        """
        pc_output_buffers_full_var(reed_solomon_dec_isdbt_sptr self, int which) -> float
        pc_output_buffers_full_var(reed_solomon_dec_isdbt_sptr self) -> pmt_vector_float
        """
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_pc_output_buffers_full_var(self, *args)


    def pc_work_time(self):
        """pc_work_time(reed_solomon_dec_isdbt_sptr self) -> float"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_pc_work_time(self)


    def pc_work_time_avg(self):
        """pc_work_time_avg(reed_solomon_dec_isdbt_sptr self) -> float"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_pc_work_time_avg(self)


    def pc_work_time_var(self):
        """pc_work_time_var(reed_solomon_dec_isdbt_sptr self) -> float"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_pc_work_time_var(self)


    def pc_work_time_total(self):
        """pc_work_time_total(reed_solomon_dec_isdbt_sptr self) -> float"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_pc_work_time_total(self)


    def pc_throughput_avg(self):
        """pc_throughput_avg(reed_solomon_dec_isdbt_sptr self) -> float"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_pc_throughput_avg(self)


    def set_processor_affinity(self, mask):
        """set_processor_affinity(reed_solomon_dec_isdbt_sptr self, std::vector< int,std::allocator< int > > const & mask)"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_set_processor_affinity(self, mask)


    def unset_processor_affinity(self):
        """unset_processor_affinity(reed_solomon_dec_isdbt_sptr self)"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_unset_processor_affinity(self)


    def processor_affinity(self):
        """processor_affinity(reed_solomon_dec_isdbt_sptr self) -> std::vector< int,std::allocator< int > >"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_processor_affinity(self)


    def active_thread_priority(self):
        """active_thread_priority(reed_solomon_dec_isdbt_sptr self) -> int"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_active_thread_priority(self)


    def thread_priority(self):
        """thread_priority(reed_solomon_dec_isdbt_sptr self) -> int"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_thread_priority(self)


    def set_thread_priority(self, priority):
        """set_thread_priority(reed_solomon_dec_isdbt_sptr self, int priority) -> int"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_set_thread_priority(self, priority)


    def name(self):
        """name(reed_solomon_dec_isdbt_sptr self) -> std::string"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_name(self)


    def symbol_name(self):
        """symbol_name(reed_solomon_dec_isdbt_sptr self) -> std::string"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_symbol_name(self)


    def input_signature(self):
        """input_signature(reed_solomon_dec_isdbt_sptr self) -> io_signature_sptr"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_input_signature(self)


    def output_signature(self):
        """output_signature(reed_solomon_dec_isdbt_sptr self) -> io_signature_sptr"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_output_signature(self)


    def unique_id(self):
        """unique_id(reed_solomon_dec_isdbt_sptr self) -> long"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_unique_id(self)


    def to_basic_block(self):
        """to_basic_block(reed_solomon_dec_isdbt_sptr self) -> basic_block_sptr"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_to_basic_block(self)


    def check_topology(self, ninputs, noutputs):
        """check_topology(reed_solomon_dec_isdbt_sptr self, int ninputs, int noutputs) -> bool"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_check_topology(self, ninputs, noutputs)


    def alias(self):
        """alias(reed_solomon_dec_isdbt_sptr self) -> std::string"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_alias(self)


    def set_block_alias(self, name):
        """set_block_alias(reed_solomon_dec_isdbt_sptr self, std::string name)"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_set_block_alias(self, name)


    def _post(self, which_port, msg):
        """_post(reed_solomon_dec_isdbt_sptr self, swig_int_ptr which_port, swig_int_ptr msg)"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr__post(self, which_port, msg)


    def message_ports_in(self):
        """message_ports_in(reed_solomon_dec_isdbt_sptr self) -> swig_int_ptr"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_message_ports_in(self)


    def message_ports_out(self):
        """message_ports_out(reed_solomon_dec_isdbt_sptr self) -> swig_int_ptr"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_message_ports_out(self)


    def message_subscribers(self, which_port):
        """message_subscribers(reed_solomon_dec_isdbt_sptr self, swig_int_ptr which_port) -> swig_int_ptr"""
        return _oneseg_swig.reed_solomon_dec_isdbt_sptr_message_subscribers(self, which_port)

reed_solomon_dec_isdbt_sptr_swigregister = _oneseg_swig.reed_solomon_dec_isdbt_sptr_swigregister
reed_solomon_dec_isdbt_sptr_swigregister(reed_solomon_dec_isdbt_sptr)


reed_solomon_dec_isdbt_sptr.__repr__ = lambda self: "<gr_block %s (%d)>" % (self.name(), self.unique_id())
reed_solomon_dec_isdbt = reed_solomon_dec_isdbt.make;



